%%% @copyright 2018 SPARKL Limited. All Rights Reserved.
%%% Licensed under the Apache License, Version 2.0 (the "License");
%%% you may not use this file except in compliance with the License.
%%% You may obtain a copy of the License at
%%%
%%% http://www.apache.org/licenses/LICENSE-2.0
%%%
%%% Unless required by applicable law or agreed to in writing, software
%%% distributed under the License is distributed on an "AS IS" BASIS,
%%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%% See the License for the specific language governing permissions and
%%% limitations under the License.
%%% @author <ahfarrell@sparkl.com> Andrew Farrell
%%% @version {@version}
%%% @doc
%%% Suite config for blockchain tests.
%%%
[{sasl,
  [{error_logger_mf_dir,"log/otp"},
    {error_logger_mf_maxbytes,1000000},
    {error_logger_mf_maxfiles,5},
    {sasl_error_logger,false}]},
  {sse,
    [{auth_flows,[sparkl]},
      {contact_nodes,['ct_svc_blockchain1@127.0.0.1']},
      {cookie,ct},
      {domains,["domain.local","{{Host}}","{{Name}}"]},
      {extensions,
        [svc_blockchain,svc_subr,svc_sequencer,
          svc_rest,svc_expr,sse_yaws,sse_svc,sse_log,sse_listen,
          sse_configure,sse_cfg]},
      {heartbeat_period,"10s"},
      {heartbeat_wait,3},
      {node,'ct_svc_blockchain1@127.0.0.1'},
      {path_to_tmp,"/tmp"},
      {start_mfa,[]}]},
  {svc_blockchain,
    [{block_fwd_interval,1000},
      {block_fwd_nodes,[]},
      {block_interval,1000},
      {block_receive_keys,
        [<<"pP4LRgO0jUKl7EdlNWORSM3/ObkF6cCxT6ZcXMaD2Mc=">>]},
      {chain_dir,"/home/ubuntu/.blockchain"},
      {merkletree_fwds,
        [{"admin@localhost","Lib/lib.blockcypher/Mix/PostHash",
            ["hash"],
            10,"blockcypher"}]},
      {merkletree_interval,15000},
      {merkletree_quorum,1},
      {merkletree_urls,["http://localhost:8001"]},
      {sign_keypair,
        {<<"pP4LRgO0jUKl7EdlNWORSM3/ObkF6cCxT6ZcXMaD2Mc=">>,
          <<"OTtd0dO5sRpDXiQqVUuUde8yuq9sBwu9sKnUWLwXEh2k/gtGA7SNQqXsR2U1Y5FIzf85uQXpwLFPplxcxoPYxw==">>}}]},
  {sse_cfg,
    [{allow_new_registrations,true},
      {backup_dir,"."},
      {backup_name,"config.backup"},
      {crypto_algorithm,sha512},
      {impl,prog_api},
      {max_users,1000},
      {users,
        [[{name,"admin@localhost"},
          {password, "postoffice"},
          {template,"default_user.xml"},
          {administrator,true}],
          [{name,"demo@sparkl.com"},
            {password,"demo"},
            {template,"demo_user.xml"}],
          [{name,"demo_lib@sparkl.com"},
            {password,"postoffice"},
            {template,"demo_lib_user.xml"}]]}]},
  {sse_listen,[{log_async,true},{throttle,{1000,1000}}]},
  {sse_log,[{log_level,3}]},
  {sse_svc,
    [{provision,
      [{subr,svc_subr_service},
        {sequencer,svc_sequencer_service},
        {rest,svc_rest_service},
        {expr,svc_expr_service}]}]},
  {sse_svc_expr,
    [{empty_list,[]},
      {owner_restrictions,
        [{"admin@localhost",blacklist,empty_list},
          {"demo_lib@sparkl.com",blacklist,empty_list},
          {"*",whitelist,standard_whitelist}]},
      {standard_whitelist,
        [{erlang,
          ['+','-','*','/','bnot','div','rem','band','bor','bxor','bsl',
            'bsr','not','and','or','xor','==','/=','=<','<','>=','>',
            '=:=','=/=','++','--',abs,append_element,apply,atom_to_binary,
            atom_to_list,binary_part,binary_to_existing_atom,
            binary_to_float,binary_to_integer,binary_to_list,
            binary_to_term,bit_size,bitstring_to_list,byte_size,ceil,
            convert_time_unit,crc32,crc32_combine,date,delete_element,
            element,external_size,float,float_to_binary,float_to_list,
            floor,fun_to_list,insert_element,integer_to_binary,
            integer_to_list,iolist_size,iolist_to_binary,is_atom,
            is_binary,is_bitstring,is_boolean,is_builtin,is_float,
            is_function,is_integer,is_list,is_map,is_number,is_pid,
            is_port,is_process_alive,is_record,is_reference,is_tuple,
            length,list_to_atom,list_to_binary,list_to_bitstring,
            list_to_existing_atom,list_to_float,list_to_integer,
            list_to_ref,list_to_tuple,localtime,
            localtime_to_universaltime,make_ref,make_tuple,map_size,max,
            md5,md5_final,md5_update,min,monotonic_time,now,phash,phash2,
            ref_to_list,round,setelement,size,split_binary,system_time,
            term_to_binary,throw,time,time_offset,timestamp,tl,trunc,
            tuple_size,tuple_to_list,unique_integer,universal_time,
            universaltime_to_localtime]},
          zlib,array,base64,binary,calendar,dict,gb_sets,gb_trees,io,io_lib,
          lists,maps,math,orddict,ordsets,proplists,queue,rand,random,re,
          sets,sofs,string,unicode,zip,httpc,httpd_util,http_uri,sse_json,
          sse_type_util,sse_util,sse_log_util,
          {sse_svc_expr_meta,[closure]}]}]},
  {sse_yaws,
    [{yaws_app_mods,
      [{"/sse/",sse_yapp},
        {"/svc_blockchain/",svc_blockchain_yapp},
        {"/sse_cfg/",sse_cfg_yapp},
        {"/sse_cfg_upload/",sse_cfg_upload_yapp},
        {"/sse_listen/",sse_listen_yapp},
        {"/sse_log/",sse_log_yapp},
        {"/sse_svc/",sse_svc_yapp},
        {"/sse_svc_dispatcher/",sse_svc_dispatcher_yapp},
        {"/svc_rest/",svc_rest_yapp},
        {"/svc_sequencer/",svc_sequencer_yapp},
        {"/svc_subr/",svc_subr_yapp}]},
      {yaws_cache_refresh_secs,0},
      {yaws_doc_roots,
        ["home/ubuntu/sparkl/sse_core/apps/sse_cfg/priv/docroot",
          "/home/ubuntu/sparkl/sse_core/apps/sse_listen/priv/docroot",
          "/home/ubuntu/sparkl/sse_core/apps/svc_rest/priv/docroot"]},
      {yaws_listen,{0,0,0,0}},
      {yaws_log_dir,"log/yaws"},
      {yaws_log_wrap_size,500000},
      {yaws_max_connections,nolimit},
      {yaws_port,8001},
      {yaws_port_ssl,9001},
      {yaws_ssl_cert_file,"ssl/localhost.cert"},
      {yaws_ssl_depth,5},
      {yaws_ssl_key_file,"ssl/localhost.key"}]},
  {yaws,[{embedded,true}]}].
